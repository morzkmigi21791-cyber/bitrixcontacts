import os
import json
import requests
from fastapi import FastAPI, Request, HTTPException, Query
from fastapi.responses import RedirectResponse, HTMLResponse
from typing import Optional
import urllib.parse
from config import BITRIX24_CLIENT_ID, BITRIX24_CLIENT_SECRET, BITRIX24_REDIRECT_URI

class Bitrix24OAuth:
    def __init__(self):
        self.client_id = BITRIX24_CLIENT_ID
        self.client_secret = BITRIX24_CLIENT_SECRET
        self.redirect_uri = BITRIX24_REDIRECT_URI
        self.auth_url = "https://oauth.bitrix.info/oauth/authorize/"
        self.token_url = "https://oauth.bitrix.info/oauth/token/"
        
    def get_auth_url(self, domain: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
        params = {
            'response_type': 'code',
            'client_id': self.client_id,
            'redirect_uri': self.redirect_uri,
            'scope': 'crm,user',
            'state': domain
        }
        return f"{self.auth_url}?{urllib.parse.urlencode(params)}"
    
    def get_access_token(self, code: str, domain: str) -> dict:
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞"""
        data = {
            'grant_type': 'authorization_code',
            'client_id': self.client_id,
            'client_secret': self.client_secret,
            'redirect_uri': self.redirect_uri,
            'code': code,
            'scope': 'crm,user'
        }
        
        try:
            response = requests.post(self.token_url, data=data, timeout=30)
            response.raise_for_status()
            return response.json()
        except Exception as e:
            raise HTTPException(status_code=400, detail=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
    
    def refresh_access_token(self, refresh_token: str) -> dict:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞"""
        data = {
            'grant_type': 'refresh_token',
            'client_id': self.client_id,
            'client_secret': self.client_secret,
            'refresh_token': refresh_token
        }
        
        try:
            response = requests.post(self.token_url, data=data, timeout=30)
            response.raise_for_status()
            return response.json()
        except Exception as e:
            raise HTTPException(status_code=400, detail=f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä OAuth
oauth = Bitrix24OAuth()

def create_oauth_routes(app: FastAPI):
    """–°–æ–∑–¥–∞–µ—Ç –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    @app.get("/bitrix/oauth/install")
    async def install_app(request: Request):
        domain = request.query_params.get('DOMAIN')

        # –ï—Å–ª–∏ –¥–æ–º–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –ø—É—Å—Ç–æ–µ
        if not domain:
            domain = ''

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ —Å—Ä–∞–∑—É —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
        auth_url = oauth.get_auth_url(domain)
        return RedirectResponse(url=auth_url)




    
    @app.get("/bitrix/oauth/callback")
    async def oauth_callback(
        code: Optional[str] = Query(None),
        state: Optional[str] = Query(None),
        error: Optional[str] = Query(None)
    ):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –æ—Ç –ë–∏—Ç—Ä–∏–∫—Å24"""
        if error:
            return HTMLResponse(f"""
            <html>
                <head><title>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</title></head>
                <body>
                    <h1>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h1>
                    <p>–û—à–∏–±–∫–∞: {error}</p>
                </body>
            </html>
            """, status_code=400)
        
        if not code or not state:
            return HTMLResponse("""
            <html>
                <head><title>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</title></head>
                <body>
                    <h1>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h1>
                    <p>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</p>
                </body>
            </html>
            """, status_code=400)
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
            tokens = oauth.get_access_token(code, state)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö)
            # –ó–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            return HTMLResponse(f"""
            <html>
                <head>
                    <title>–£—Å–ø–µ—à–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞</title>
                    <style>
                        body {{ font-family: Arial, sans-serif; text-align: center; padding: 50px; }}
                        .success {{ color: #28a745; }}
                        .info {{ color: #17a2b8; margin: 20px 0; }}
                        .button {{ 
                            background: #007bff; color: white; padding: 10px 20px; 
                            border: none; border-radius: 5px; cursor: pointer; 
                            text-decoration: none; display: inline-block; margin: 10px;
                        }}
                        .progress {{ 
                            background: #f8f9fa; border: 1px solid #dee2e6; 
                            border-radius: 5px; padding: 20px; margin: 20px 0; 
                        }}
                        .progress-bar {{ 
                            background: #28a745; height: 20px; border-radius: 10px; 
                            transition: width 0.3s; margin: 10px 0;
                        }}
                        .status {{ margin: 10px 0; padding: 10px; border-radius: 5px; }}
                        .status.success {{ background: #d4edda; color: #155724; }}
                        .status.error {{ background: #f8d7da; color: #721c24; }}
                        .status.info {{ background: #d1ecf1; color: #0c5460; }}
                    </style>
                </head>
                <body>
                    <h1 class="success">üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</h1>
                    <p class="info">–î–æ–º–µ–Ω: {state}</p>
                    <p class="info">–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—É—á–µ–Ω</p>
                    
                    <div class="progress">
                        <h3>üîó –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ë–∏—Ç—Ä–∏–∫—Å24</h3>
                        <div class="progress-bar" id="progressBar" style="width: 0%;"></div>
                        <div id="progressText">0%</div>
                        <div id="statusMessages"></div>
                    </div>
                    
                    <div>
                        <button class="button" onclick="openApp()">üè¢ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</button>
                        <button class="button" onclick="retryButtons()" id="retryBtn" style="display: none;">üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫</button>
                    </div>
                    
                    <script>
                        const domain = '{state}';
                        const accessToken = '{tokens.get("access_token", "")}';
                        const placements = [
                            {{ name: 'CRM_LEAD_LIST_MENU', title: '–°–ø–∏—Å–æ–∫ –ª–∏–¥–æ–≤' }},
                            {{ name: 'CRM_DEAL_LIST_MENU', title: '–°–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫' }},
                            {{ name: 'CRM_CONTACT_LIST_MENU', title: '–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤' }},
                            {{ name: 'CRM_COMPANY_LIST_MENU', title: '–°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π' }},
                            {{ name: 'CRM_LEAD_DETAIL_MENU', title: '–ö–∞—Ä—Ç–æ—á–∫–∞ –ª–∏–¥–∞' }},
                            {{ name: 'CRM_DEAL_DETAIL_MENU', title: '–ö–∞—Ä—Ç–æ—á–∫–∞ —Å–¥–µ–ª–∫–∏' }},
                            {{ name: 'CRM_CONTACT_DETAIL_MENU', title: '–ö–∞—Ä—Ç–æ—á–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞' }},
                            {{ name: 'CRM_COMPANY_DETAIL_MENU', title: '–ö–∞—Ä—Ç–æ—á–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏' }}
                        ];
                        
                        let successCount = 0;
                        let totalCount = placements.length;
                        
                        function addStatusMessage(message, type = 'info') {{
                            const statusDiv = document.getElementById('statusMessages');
                            const messageDiv = document.createElement('div');
                            messageDiv.className = `status ${{type}}`;
                            messageDiv.textContent = message;
                            statusDiv.appendChild(messageDiv);
                        }}
                        
                        function updateProgress(current, total) {{
                            const percentage = Math.round((current / total) * 100);
                            document.getElementById('progressBar').style.width = `${{percentage}}%`;
                            document.getElementById('progressText').textContent = `${{percentage}}% (${{current}}/${{total}})`;
                        }}
                        
                        async function addPlacement(placement, index) {{
                            try {{
                                const url = `https://${{domain}}/rest/1/${{accessToken}}/placement.bind.json`;
                                const data = {{
                                    PLACEMENT: placement.name,
                                    HANDLER: 'https://amusingly-awaited-starling.cloudpub.ru/api/bitrix24/button_handler',
                                    TITLE: 'Bitrix24 –ö–æ–Ω—Ç–∞–∫—Ç—ã'
                                }};
                                
                                const response = await fetch(url, {{
                                    method: 'POST',
                                    headers: {{ 'Content-Type': 'application/json' }},
                                    body: JSON.stringify(data)
                                }});
                                
                                const result = await response.json();
                                
                                if (result.error) {{
                                    addStatusMessage(`‚ùå ${{placement.title}}: ${{result.error.description}}`, 'error');
                                }} else {{
                                    successCount++;
                                    addStatusMessage(`‚úÖ ${{placement.title}}: –¥–æ–±–∞–≤–ª–µ–Ω–∞`, 'success');
                                }}
                                
                                updateProgress(index + 1, totalCount);
                                
                                if (index === totalCount - 1) {{
                                    // –í—Å–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
                                    if (successCount > 0) {{
                                        addStatusMessage(`üéâ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ${{successCount}} –∏–∑ ${{totalCount}} –∫–Ω–æ–ø–æ–∫!`, 'success');
                                        addStatusMessage('–û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –ë–∏—Ç—Ä–∏–∫—Å24, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–Ω–æ–ø–∫–∏.', 'info');
                                    }} else {{
                                        addStatusMessage('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.', 'error');
                                        document.getElementById('retryBtn').style.display = 'inline-block';
                                    }}
                                    
                                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                                    setTimeout(() => {{
                                        window.close();
                                    }}, 5000);
                                }}
                                
                            }} catch (error) {{
                                addStatusMessage(`‚ùå ${{placement.title}}: –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏`, 'error');
                                updateProgress(index + 1, totalCount);
                            }}
                        }}
                        
                        function openApp() {{
                            window.open('https://amusingly-awaited-starling.cloudpub.ru', '_blank');
                        }}
                        
                        function retryButtons() {{
                            document.getElementById('statusMessages').innerHTML = '';
                            document.getElementById('retryBtn').style.display = 'none';
                            successCount = 0;
                            updateProgress(0, totalCount);
                            
                            placements.forEach((placement, index) => {{
                                setTimeout(() => addPlacement(placement, index), index * 500);
                            }});
                        }}
                        
                        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
                        window.onload = function() {{
                            addStatusMessage('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å...', 'info');
                            
                            placements.forEach((placement, index) => {{
                                setTimeout(() => addPlacement(placement, index), index * 500);
                            }});
                        }};
                    </script>
                </body>
            </html>
            """)
            
        except Exception as e:
            return HTMLResponse(f"""
            <html>
                <head><title>–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏</title></head>
                <body>
                    <h1>–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏</h1>
                    <p>–û—à–∏–±–∫–∞: {str(e)}</p>
                </body>
            </html>
            """, status_code=500)
